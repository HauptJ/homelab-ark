---

# If built in molecule, user will be 'ubuntu'
# install docker swarm first

- include_tasks: vagrant_swarm.yml
  when:
    - ansible_user_id == 'ubuntu'

# ark will run with user:group 1000:1000 in the docker container itself,
# so I'm using that user:group for the volume as well.

- name: Create directories for docker volumes
  become: true
  file:
    path: "{{ ark_dir }}"
    state: directory
    owner: 1000
    group: 1000
    mode: 0755
  tags:
    - ark

# | ln: failed to create symbolic link 'Game.ini': File exists
# | ln: failed to create symbolic link 'GameUserSettings.ini': File exists

- name: Generate config files
  template:
    src: "{{ item }}.j2"
    dest: "{{ ark_dir }}/{{ item }}"
    mode: 0644
  with_items:
    - arkmanager.cfg
    # - GameUserSettings.ini
    # - Game.ini
    - crontab
    - docker-stack.yml
  tags:
    - ark

- name: lookup ADMINPASSWORD
  debug:
    msg: "{{ lookup('env','ADMINPASSWORD') }}"

- name: deploy the ark stack to docker swarm
  become: true
  command: docker stack deploy -c docker-stack.yml ark
  args:
    chdir: "{{ ark_dir }}"

# Test stuff

- name: Test for server creating log file
  wait_for:
    path: "{{ ark_dir }}/log/arkserver.log"
    state: present
    timeout: 30
    msg: Timed out waiting for ark server log file

- debug:
    msg: "IPs {{ ansible_all_ipv4_addresses }}"

# - name: Wait 30 seconds for port 7778
#   wait_for:
#     host: "{{ item }}"
#     port: 7778
#     timeout: 10
#     # delay: 10
#   with_items: "{{ ansible_all_ipv4_addresses }}"

- name: docker stack ps ark
  become: true
  shell: >
    docker stack ps ark
  register: docker_stack

- debug:
    msg: "Network {{ docker_stack.stdout_lines }}"

# docker service logs ark_ark | sed '/*The server is now running, and should be up within 10 minutes$/ q'
# docker service logs ark_ark | sed '/*Waiting...$/ q'
